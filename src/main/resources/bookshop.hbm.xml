<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="entity">
    <class name="Authors" table="authors" schema="public" catalog="bookshop">
        <id name="authorId">
            <column name="author_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <set name="bookSet" table="books_authors">
            <key column="author_id"/>
            <many-to-many column="book_id" class="Books"/>
        </set>
    </class>
    <class name="Books" table="books" schema="public" catalog="bookshop">
        <id name="bookId">
            <column name="book_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <property name="price">
            <column name="price" sql-type="numeric(8,2)" precision="8" scale="2" not-null="true"/>
        </property>
        <property name="year">
            <column name="year" sql-type="integer" not-null="true"/>
        </property>
        <property name="pages">
            <column name="pages" sql-type="integer" not-null="true"/>
        </property>
        <property name="cover">
            <column name="cover" sql-type="varchar(10)" length="10" not-null="true"/>
        </property>
        <property name="quantity">
            <column name="quantity" sql-type="integer" not-null="true"/>
        </property>
        <property name="annotation">
            <column name="annotation" sql-type="varchar(500)" length="500" not-null="true"/>
        </property>
        <many-to-one name="publishersByPublisherId" class="Publishers" lazy="false">
            <column name="publisher_id" not-null="true"/>
        </many-to-one>
        <set name="authorSet" table="books_authors">
            <key column="book_id"/>
            <many-to-many column="author_id" class="Authors"/>
        </set>
        <set name="orderSet" table="orders_books">
            <key column="book_id"/>
            <many-to-many column="order_id" class="Orders"/>
        </set>
        <set name="genreSet" table="books_genres">
            <key column="book_id"/>
            <many-to-many column="genre_id" class="Genres"/>
        </set>
    </class>
    <class name="Clients" table="clients" schema="public" catalog="bookshop">
        <id name="clientId">
            <column name="client_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <property name="phone">
            <column name="phone" sql-type="varchar(50)" length="50" not-null="true"/>
        </property>
        <property name="email">
            <column name="email" sql-type="varchar(200)" length="200" not-null="true"/>
        </property>
        <property name="password">
            <column name="password" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <set name="ordersByClientsId" inverse="true">
            <key>
                <column name="client_id" not-null="true"/>
            </key>
            <one-to-many not-found="ignore" class="Orders"/>
        </set>
    </class>
    <class name="Genres" table="genres" schema="public" catalog="bookshop">
        <id name="genreId">
            <column name="genre_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <set name="bookSet" table="books_genres">
            <key column="genre_id"/>
            <many-to-many column="book_id" class="Books"/>
        </set>
    </class>
    <class name="Orders" table="orders" schema="public" catalog="bookshop">
        <id name="orderId">
            <column name="order_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="deliveryDate">
            <column name="delivery_date" sql-type="date" not-null="true"/>
        </property>
        <property name="period">
            <column name="period" sql-type="integer" not-null="true"/>
        </property>
        <property name="deliveryAddress">
            <column name="delivery_address" sql-type="varchar(400)" length="400" not-null="true"/>
        </property>
        <property name="status">
            <column name="status" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="notes">
            <column name="notes" sql-type="varchar(500)" length="500" not-null="true"/>
        </property>
        <many-to-one name="clientsByClientId" class="Clients" lazy="false">
            <column name="client_id" not-null="true"/>
        </many-to-one>
        <set name="bookSet" table="orders_books">
            <key column="order_id"/>
            <many-to-many column="book_id" class="Books"/>
        </set>
    </class>
    <class name="Publishers" table="publishers" schema="public" catalog="bookshop">
        <id name="publisherId">
            <column name="publisher_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <property name="city">
            <column name="city" sql-type="varchar(50)" length="50" not-null="true"/>
        </property>
        <property name="country">
            <column name="country" sql-type="varchar(50)" length="50" not-null="true"/>
        </property>
        <set name="booksByPublisherId" inverse="true">
            <key>
                <column name="publisher_id" not-null="true"/>
            </key>
            <one-to-many not-found="ignore" class="Books"/>
        </set>
    </class>
    <class name="Workers" table="workers" schema="public" catalog="bookshop">
        <id name="workerId">
            <column name="worker_id" sql-type="integer"/>
            <generator class="identity"/>
        </id>
        <property name="name">
            <column name="name" sql-type="varchar(100)" length="100" not-null="true"/>
        </property>
        <property name="email">
            <column name="email" sql-type="varchar(200)" length="200" not-null="true"/>
        </property>
        <property name="password">
            <column name="password" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
    </class>
</hibernate-mapping>